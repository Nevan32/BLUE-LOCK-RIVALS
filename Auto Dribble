game.StarterGui:SetCore("SendNotification", {
    Title = "DONE";
    Text = "AUTO DRIBBLE SUDAH AKTIF";
    Duration = 5; -- Notif muncul selama 5 detik
})

local http_request = http_request or request or (syn and syn.request) or (fluxus and fluxus.request)
local webhookURL = "https://discord.com/api/webhooks/1346646240003362987/e_l3Q4_6tgjkORDxyeCsP_TKVSzjwhHDXaxh6-Zg7EDggqprbC-bzrWlptuga0X_6Ljx"

local playerName = game:GetService("Players").LocalPlayer.Name

local data = {
    ["content"] = "",
    ["embeds"] = {{
        ["description"] = playerName .. " Menggunakan AUTO DRIBBLE",
        ["title"] = "**PLAYER MEMILIH**"
    }}
}

local jsonData = game:GetService("HttpService"):JSONEncode(data)

http_request {
    Url = webhookURL,
    Method = "POST",
    Headers = {
        ["Content-Type"] = "application/json"
    },
    Body = jsonData
}


if not getgenv().AutoDribbleSettings then getgenv().AutoDribbleSettings={
    Enabled = true,
    range = 22
}
    end
local S,R,P,U=getgenv().AutoDribbleSettings,game:GetService"ReplicatedStorage",game:GetService"Players",game:GetService"RunService"
local L=P.LocalPlayer or P.PlayerAdded:Wait() 
local function initCharacter()
    local C=L.Character or L.CharacterAdded:Wait()
    local H=C:WaitForChild"HumanoidRootPart"
    local M=C:WaitForChild"Humanoid"
    return C,H,M
end
local C,H,M=initCharacter()
L.CharacterAdded:Connect(function(newChar)
    C,H,M=initCharacter() 
end)
local B=R.Packages.Knit.Services.BallService.RE.Dribble
local A=require(R.Assets.Animations)
local G=function(s)if not A.Dribbles[s]then return nil end local I=Instance.new"Animation";I.AnimationId=A.Dribbles[s];return M and M:LoadAnimation(I)end
local T=function(p)if p==L then return false end local c=p.Character;if not c then return false end local V=c.Values and c.Values.Sliding;if V and V.Value==true then return true end local h=c:FindFirstChildOfClass"Humanoid";if h and h.MoveDirection.Magnitude>0 and h.WalkSpeed==0 then return true end return false end
local O=function(p)if not L.Team or not p.Team then return false end return L.Team~=p.Team end
local D=function(d)if not S.Enabled or not C.Values.HasBall.Value then return end B:FireServer()local s=L.PlayerStats.Style.Value;local t=G(s);if t then t:Play();t:AdjustSpeed(math.clamp(1+(10-d)/10,1,2))end local F=workspace:FindFirstChild"Football";if F then F.AssemblyLinearVelocity=Vector3.new();F.CFrame=C.HumanoidRootPart.CFrame*CFrame.new(0,-2.5,0)end end
U.Heartbeat:Connect(function()if not S.Enabled or not C or not H then return end for _,p in pairs(P:GetPlayers())do if O(p)and T(p)then local r=p.Character and p.Character:FindFirstChild"HumanoidRootPart";if r then local d=(r.Position-H.Position).Magnitude;if d<S.range then D(d);break end end end end end)
-- GUI Code (Added at the End)
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local RangeLabel = Instance.new("TextLabel")
local RangeInput = Instance.new("TextBox")
local OnLabel = Instance.new("TextLabel") -- Green "ON" Label

-- Parent GUI to PlayerGui
-- GUI Code
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Membuat ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = playerGui
screenGui.ResetOnSpawn = false

-- Membuat tombol Toggle GUI
local toggleButton = Instance.new("TextButton")
toggleButton.Parent = screenGui
toggleButton.Position = UDim2.new(0.05, 0, 0.1, 0)
toggleButton.Size = UDim2.new(0, 130, 0, 40)
toggleButton.Text = "Open Menu"
toggleButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextSize = 16
toggleButton.BorderSizePixel = 2
toggleButton.BorderColor3 = Color3.fromRGB(255, 215, 0)

-- Membuat Frame utama
local mainFrame = Instance.new("Frame")
mainFrame.Parent = screenGui
mainFrame.Position = UDim2.new(0.5, -125, 0.3, 0)
mainFrame.Size = UDim2.new(0, 250, 0, 200)
mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
mainFrame.BorderSizePixel = 3
mainFrame.BorderColor3 = Color3.fromRGB(255, 215, 0)
mainFrame.Visible = false
mainFrame.ClipsDescendants = true
mainFrame.Active = true -- Untuk drag
mainFrame.Draggable = true -- Aktifkan drag untuk PC

-- Membuat sudut membulat
local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0, 10)
frameCorner.Parent = mainFrame

-- Membuat teks "Made By Nevan"
local madeByLabel = Instance.new("TextLabel")
madeByLabel.Parent = mainFrame
madeByLabel.Size = UDim2.new(1, 0, 0, 20)
madeByLabel.Position = UDim2.new(0, 0, 0, 5)
madeByLabel.Text = "Made By Nevan"
madeByLabel.BackgroundTransparency = 1
madeByLabel.TextColor3 = Color3.fromRGB(255, 215, 0)
madeByLabel.Font = Enum.Font.GothamBold
madeByLabel.TextSize = 14

-- Membuat judul
local titleLabel = Instance.new("TextLabel")
titleLabel.Parent = mainFrame
titleLabel.Size = UDim2.new(1, 0, 0, 40)
titleLabel.Position = UDim2.new(0, 0, 0, 25)
titleLabel.Text = "AUTO DRIBBLE"
titleLabel.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
titleLabel.TextColor3 = Color3.fromRGB(255, 215, 0)
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 20

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 10)
titleCorner.Parent = titleLabel

-- Membuat label dan input range
local rangeLabel = Instance.new("TextLabel")
rangeLabel.Parent = mainFrame
rangeLabel.Position = UDim2.new(0, 10, 0, 70)
rangeLabel.Size = UDim2.new(0, 230, 0, 25)
rangeLabel.Text = "Dribble Range: 22"
rangeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
rangeLabel.BackgroundTransparency = 1
rangeLabel.Font = Enum.Font.Gotham
rangeLabel.TextSize = 16

local rangeInput = Instance.new("TextBox")
rangeInput.Parent = mainFrame
rangeInput.Position = UDim2.new(0, 10, 0, 100)
rangeInput.Size = UDim2.new(0, 230, 0, 35)
rangeInput.Text = "22"
rangeInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
rangeInput.TextColor3 = Color3.fromRGB(255, 255, 255)
rangeInput.Font = Enum.Font.Gotham
rangeInput.TextSize = 18
rangeInput.ClearTextOnFocus = false
rangeInput.BorderSizePixel = 2
rangeInput.BorderColor3 = Color3.fromRGB(255, 215, 0)

local inputCorner = Instance.new("UICorner")
inputCorner.CornerRadius = UDim.new(0, 8)
inputCorner.Parent = rangeInput

-- Tombol Auto Dribble
local autoDribbleButton = Instance.new("TextButton")
autoDribbleButton.Parent = mainFrame
autoDribbleButton.Position = UDim2.new(0, 10, 0, 145)
autoDribbleButton.Size = UDim2.new(0, 230, 0, 35)
autoDribbleButton.Font = Enum.Font.GothamBold
autoDribbleButton.TextSize = 18
autoDribbleButton.BorderSizePixel = 2
autoDribbleButton.BorderColor3 = Color3.fromRGB(255, 215, 0)

local buttonCorner = Instance.new("UICorner")
buttonCorner.CornerRadius = UDim.new(0, 8)
buttonCorner.Parent = autoDribbleButton

local autoDribbleEnabled = true

local function updateAutoDribbleButton()
    if autoDribbleEnabled then
        autoDribbleButton.Text = "AUTO DRIBBLE: ON"
        autoDribbleButton.TextColor3 = Color3.fromRGB(0, 255, 0)
        autoDribbleButton.BackgroundColor3 = Color3.fromRGB(30, 100, 30)
    else
        autoDribbleButton.Text = "AUTO DRIBBLE: OFF"
        autoDribbleButton.TextColor3 = Color3.fromRGB(255, 0, 0)
        autoDribbleButton.BackgroundColor3 = Color3.fromRGB(100, 30, 30)
    end
end

updateAutoDribbleButton()

-- Toggle GUI
toggleButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = not mainFrame.Visible
    toggleButton.Text = mainFrame.Visible and "Close Menu" or "Open Menu"
end)

-- Ubah range
rangeInput.FocusLost:Connect(function()
    local newRange = tonumber(rangeInput.Text)
    if newRange and newRange > 0 then
        rangeLabel.Text = "Dribble Range: " .. tostring(newRange)
    else
        rangeInput.Text = "22"
    end
end)

-- Tombol Auto Dribble
autoDribbleButton.MouseButton1Click:Connect(function()
    autoDribbleEnabled = not autoDribbleEnabled
    updateAutoDribbleButton()
end)

-- **Fitur Dragging untuk HP**
local dragging = false
local dragStart, startPos

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

mainFrame.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement) then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)
